# This workflow will build a Docker Image of the Java Backend

# It will then publish the image to Github Packages to be run by an Oracle Cloud Server 

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Deploy to Oracle VPS

on:
  push:
    paths: 
    - 'backend/**'
    branches: [ "master" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  
jobs:
  build-and-push-image:
    name: Build backend to Docker Image and push it to Github Packages
    runs-on: ubuntu-latest
    outputs:
      docker_tags: ${{ steps.meta.outputs.tags }}

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy_to_remote_server:
    name: Deploy the Docker Image in remote server 
    runs-on: ubuntu-latest
    needs: build-and-push-image

    steps:
      - name: Install SSH keys
        # check this thread to understand why its needed:
        # https://stackoverflow.com/a/70447517
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
      - name: Connect and Pull Docker 
        run: |
          # ssh deployer@${{ secrets.SSH_HOST }} 'echo "${{ needs.build-and-push-image.outputs.docker_tags }}" > ~/.env'
          curl -L https://raw.githubusercontent.com/jmischler72/e_shop_projet/master/backend/docker-compose.yml --output ~/docker-compose.yml
          ssh deployer@${{ secrets.SSH_HOST }} "docker compose pull  && docker compose up -d"
      - name: Cleanup
        run: rm -rf ~/.ssh

